---
# See AnyEvent::MQTT for broker connection options
Broker:
    host: localhost
    will_topic: mqtt2db/disconnected
    will_message: "Program mqtt2db has disconnected from broker"
    will_retain: 1
    client_id: mqtt2db

# See DBI and the driver for your database for connection options
# If autoCommit is set to 0, changes will be commited every 
# 'commit every' seconds
Database:
    driver: SQLite
    DBname: example.db
    user: ~
    password: ~
    autoCommit: 0
    commit every: 10

Topics:
    - Machine started:
        topic: "machine/:id/connected"
        SQL: >
            SELECT part_number
            FROM production_plan JOIN manufacturing_orders USING (man_order)
            WHERE machine_id = ? AND prod_date = ? AND shift = ?
        place holders:
            - id
            - today
            - shift
        process_with: AVO
    - Activate reference:
        topic: "machine/:id/activate/:part_number

    - Change of state:
        topic: "machine/:id/state/update"
        SQL: >
            UPDATE machine_state 
            SET mode = ?, alarm = ?
            WHERE area = ? AND type = ? AND id = ? 
        place holders:
            - mode
            - alarm
            - area
            - type
            - id
    - Logging of new parameters:
        topic: ":area/:type/:id/parameters/update"
        SQL: >
            INSERT INTO parameters_log (
                area, type, id, sta1_hor, sta1_ver, sta2_hor, sta2_ver
            ) VALUES (?,?,?,?,?,?,?,?)
        place holders:
            - area
            - type
            - id
            - sta1_hor
            - sta1_ver
            - sta2_hor
            - sta2_ver
    - Logging of new cycles:
        topic: ":area/:type/:id/cycle"
        SQL: >
            INSERT INTO cycles_log (
            SET mode = ?, alarm = ?
            WHERE area = ? AND type = ? AND id = ? 
        place holders:
            - mode
            - alarm
            - area
            - type
            - id
    - Request for planned reference:
        topic:     ":area/:type/:id/reference/get"
        response:  ":area/:type/:id/parameters"
        SQL: >
            SELECT reference FROM production_plan
            WHERE area = ? AND type = ? AND id = ?
        place holders:
            - area
            - type
            - id
    - Request for parameters:
        topic: ":area/:type/:id/parameters/get"
        response: ":area/:type/:id/parameters"
        SQL: >
            SELECT * FROM parameters 
            WHERE type = ? AND reference = ?
        place holders:
            - type
            - reference
        process with: Sereal
