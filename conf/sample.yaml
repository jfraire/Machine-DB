---
# See AnyEvent::MQTT for broker connection options
Broker:
    host: localhost
    will_topic: mqtt2db/disconnected
    will_message: "Program mqtt2db has disconnected from broker"
    will_retain: 1
    client_id: mqtt2db

# See DBI and the driver for your database for connection options
# If autoCommit is set to 0, changes will be commited every
# 'commit every' seconds
Database:
    driver: SQLite
    DBname: t/example.db
    user: ~
    password: ~
    autoCommit: 0
    commit every: 10

Topics:
    - Machine started:
        topic:   "machine/:machine_id/connected"
        SQL: >
            SELECT part_number
            FROM machine_state
            WHERE machine_id = ?
        place holders:
            - machine_id
        response:
            topic: "machine/:machine_id/reference/set"
            fields:
                - part_number

    - Request reference:
        topic:    "machine/:machine_id/reference/get"
        SQL: >
            SELECT part_number
            FROM machine_state
            WHERE machine_id = ?
        place holders:
            - machine_id
        response:
            topic: "machine/:machine_id/reference/set"
            fields:
                - part_number

    - Request for parameters:
        topic:    "machine/:machine_id/parameters/get"
        SQL: >
            SELECT parameters
            FROM machine_state JOIN machines USING (machine_id) JOIN parameters USING (machine_type)
            WHERE machine_id = ?
        place holders:
            - machine_id
        response:
            topic: "machine/:machine_id/parameters/set"
            fields:
                - parameters

    - Change of state:
        topic: "machine/:id/state/update"
        implode all but:
            fields:
                - machine_id
                - part_number
                - state_number
                - alarm_number
                - screen_number
            destination: parameters
        SQL: >
            UPDATE machine_state
            SET state_number = ?, alarm_number = ?, current_params = ?
            WHERE machine_id = ?
        place holders:
            - state_number
            - alarm_number
            - parameters
            - id

    - Logging of new cycles:
        topic: "machine/:id/cycle"
        SQL: >
            INSERT INTO cycle_log (machine_id, registered_on,
            cycle_quality, defect_number, cycle_time, measurements)
            VALUES (?, ?, ?, ?, ?, ?)
        place holders:
            - id
            - timestamp
            - accepted
            - reject_reason
            - cycle_time
            - measurements
    
    - Machine disconnected:
        topic: "machine/:id/disconnected"
        SQL: >
            UPDATE machine_state
            SET state_number = 0, alarm_number = 0, current_params = NULL
            WHERE machine_id = ?
        place holders:
            - id
